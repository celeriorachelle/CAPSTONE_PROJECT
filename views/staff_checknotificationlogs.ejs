<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Staff | Notification Logs</title>
  <link rel="stylesheet" href="/stylesheets/staff_installments.css">
<style>
  .unread { background-color: #fff3cd; }
  .read { background-color: #e9ecef; }

  .btn-mark, .btn-all, .btn-filter {
    background-color:  #4a6b46;
    color: white;
    border: none;
    padding: 6px 12px;
    border-radius: 6px;
    cursor: pointer;
    font-size: 13px;
    transition: background-color 0.2s, transform 0.1s;
  }
  .btn-mark:hover, .btn-all:hover, .btn-filter:hover { background-color: #526D82; transform: scale(1.03); }

  header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
    flex-wrap: wrap;
    gap: 10px;
  }

  .actions {
    display: flex;
    align-items: center;
    gap: 12px;
    flex-wrap: wrap;
  }

  /* ✨ Date Filter Design */
  .filter-container {
    display: flex;
    align-items: center;
    gap: 8px;
    background-color: #f8f9fa;
    border: 1px solid #ccc;
    padding: 6px 12px;
    border-radius: 8px;
    box-shadow: 0 1px 2px rgba(0,0,0,0.1);
  }

  .filter-container label {
    font-size: 13px;
    font-weight: 600;
    color: #27374D;
  }

  input[type="date"] {
    padding: 5px 8px;
    border-radius: 6px;
    border: 1px solid #bbb;
    background-color: #fff;
    font-size: 13px;
    transition: border-color 0.2s;
  }

  input[type="date"]:focus {
    outline: none;
    border-color: #27374D;
    box-shadow: 0 0 3px rgba(39, 55, 77, 0.4);
  }

  input[type="text"]#searchInput {
    padding: 6px 10px;
    border-radius: 6px;
    border: 1px solid #ccc;
    font-size: 13px;
    width: 200px;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 10px;
  }

  table th, table td {
    padding: 10px;
    text-align: left;
    border-bottom: 1px solid #ddd;
  }

  table th {
    background-color: linear-gradient(90deg, #4a6b46, #5c8754);
    color: white;
    font-size: 14px;
  }

  .timestamp { font-size: 13px; color: #666; }
  .small-id { font-size: 12px; color: #555; }
</style>

</head>
<body>
  <div class="sidebar">
    <h2>Staff Panel</h2>
    <ul>
      <li><a href="/staff_dashboard">Dashboard</a></li>
      <li><a href="/staff_viewbookings">View Bookings</a></li>
      <li><a href="/maps">Cemetery Map</a></li>
      <li><a href="/staff_installments">Track Installments</a></li>
      <li><a href="/staff_checknotificationlogs" class="active">Notification Logs</a></li>
      <li><a href="/staff_viewpaymentreports">Payment Reports</a></li>
      <li><a href="/login/logout">Logout</a></li>
    </ul>
  </div>

  <div class="main">
    <header>
      <h1>Notification Logs</h1>
<div class="actions">
  <input id="searchInput" type="text" placeholder="🔍 Search notification...">

  <div class="filter-container">
    <label>From:</label>
    <input type="date" id="startDate" value="<%= startDate %>">
    <label>To:</label>
    <input type="date" id="endDate" value="<%= endDate %>">
    <button class="btn-filter" onclick="applyDateFilter()"><i class="fa-solid fa-filter"></i> Apply</button>
  </div>

  <button class="btn-all" onclick="markAllAsRead()">
    <i class="fa-regular fa-envelope-open"></i> Mark All as Read
  </button>
</div>

    </header>

    <table id="notifTable">
      <thead>
        <tr>
          <th>Notif ID</th>
          <th>User</th>
          <th>Email</th>
          <th>Message</th>
          <th>Booking ID</th>
          <th>Payment ID</th>
          <th>Plot ID</th>
          <th>Date</th>
          <th>Status</th>
          <th>Action</th>
        </tr>
      </thead>
      <tbody>
        <% if (notifications.length === 0) { %>
          <tr><td colspan="10">No notifications found.</td></tr>
        <% } else { %>
          <% notifications.forEach(n => { %>
            <tr class="<%= n.is_read ? 'read' : 'unread' %>">
              <td><%= n.notif_id %></td>
              <td><%= n.fullName || 'Unknown User' %></td>
              <td><%= n.email || '—' %></td>
              <td><%= n.message %></td>
              <td class="small-id"><%= n.booking_id || '—' %></td>
              <td class="small-id"><%= n.payment_id || '—' %></td>
              <td class="small-id"><%= n.plot_id || '—' %></td>
              <td class="timestamp"><%= new Date(n.datestamp).toLocaleString() %></td>
              <td><%= n.is_read ? 'Read' : 'Unread' %></td>
              <td>
                <% if (!n.is_read) { %>
                  <button class="btn-mark" onclick="markAsRead(<%= n.notif_id %>)">Mark as Read</button>
                <% } else { %>
                  <span style="color: #888;">—</span>
                <% } %>
              </td>
            </tr>
          <% }) %>
        <% } %>
      </tbody>
    </table>
  </div>

  <script>
    // 🔍 Search Function
    document.getElementById("searchInput").addEventListener("input", function() {
      const term = this.value.toLowerCase();
      document.querySelectorAll("#notifTable tbody tr").forEach(row => {
        const text = row.textContent.toLowerCase();
        row.style.display = text.includes(term) ? "" : "none";
      });
    });

    // 📅 Apply Date Filter
    function applyDateFilter() {
      const start = document.getElementById("startDate").value;
      const end = document.getElementById("endDate").value;
      if (!start || !end) {
        alert("Please select both start and end dates.");
        return;
      }
      window.location.href = `/staff_checknotificationlogs?startDate=${start}&endDate=${end}`;
    }

    // ✅ Mark Single Notification as Read
    function markAsRead(id) {
      if (!confirm("Mark this notification as read?")) return;
      fetch(`/staff_checknotificationlogs/markAsRead/${id}`, { method: "POST" })
        .then(res => res.json())
        .then(data => { alert(data.message); location.reload(); })
        .catch(() => alert("Error updating notification status."));
    }

    // ✅ Mark All as Read
    function markAllAsRead() {
      if (!confirm("Mark all notifications as read?")) return;
      fetch(`/staff_checknotificationlogs/markAllAsRead`, { method: "POST" })
        .then(res => res.json())
        .then(data => { alert(data.message); location.reload(); })
        .catch(() => alert("Error updating all notifications."));
    }
  </script>
</body>
</html>
