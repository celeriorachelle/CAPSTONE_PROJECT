        <% var error = typeof error === 'undefined' ? null : error; %>
      <% var formData = typeof formData === 'undefined' ? {} : formData; %>
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Everlasting Peace Memorial Park | Register</title>
          <link rel="preconnect" href="https://fonts.googleapis.com">
          <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
          <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
          <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
          <link rel="icon" href="ðŸª¦">
          <link rel="stylesheet" href="/stylesheets/register.css">
          <link rel="stylesheet" href="/boxicons/css/boxicons.min.css">

        </head>
        <body>
          <section>
              <div class="left-image"></div>
              <div class="login-container">
                  <a href="/" class="home-button" title="Go to Home">
                      <i class="bi bi-house-fill"></i>
                  </a>
                  <div class="header">
                      <h2>Everlasting Peace Memorial Park Cemetery</h2>
                      <p class="subtitle">Gardens of Peace</p>
                  </div>
                  <div class="input-form">
                      <% if (typeof error === 'string' && error) { %>
                        <div class="error-message"><%= error %></div>
                      <% } %>
                    <form action="/register" method="POST">
    <div class="input-columns">
      <div class="input-group">
        <label for="firstname">First Name</label>
        <input type="text" id="firstname" name="firstname" required 
          value="<%= formData.firstname || '' %>" 
          placeholder="Enter your first name">
      </div>
      <div class="input-group">
        <label for="lastname">Last Name</label>
        <input type="text" id="lastname" name="lastname" required 
          value="<%= formData.lastname || '' %>" 
          placeholder="Enter your last name">
      </div>
    </div>

    <div class="input-columns">
      <div class="input-group">
        <label for="email">Email Address</label>
        <input type="email" id="email" name="email" required 
          value="<%= formData.email || '' %>" 
          placeholder="Enter your email address">
      </div>
      <div class="input-group">
        <label for="phone">Phone Number</label>
        <input type="tel" id="phone" name="phone" required 
          maxlength="11" pattern="09[0-9]{9}" 
          title="Must start with 09 and be 11 digits" 
          value="<%= formData.phone || '' %>" 
          placeholder="09XXXXXXXXX">
      </div>
    </div>

    <div class="input-full">
      <label for="address">Address</label>
      <input type="text" id="address" name="address" 
        value="<%= formData.address || '' %>" 
        required placeholder="Enter your full address">
    </div>

    <div class="input-columns">
      <div class="input-group">
        <label for="password">Password</label>
        <div class="password-wrapper">
          <input 
            type="password" 
            id="password" 
            name="password" 
            placeholder="Create a secure password"
            pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{8,}$"
            title="At least 8 characters, including uppercase, lowercase, number, and special character."
            required
          >
          <button type="button" class="toggle-visibility" data-target="password" aria-label="Show password">
            <i class='bx bx-show'></i>
          </button>
        </div>
      </div>

      <div class="input-group">
        <label for="confirm_password">Confirm Password</label>
        <div class="password-wrapper">
          <input 
            type="password" 
            id="confirm_password" 
            name="confirm_password" 
            placeholder="Confirm your password"
            required
          >
          <button type="button" class="toggle-visibility" data-target="confirm_password" aria-label="Show password">
            <i class='bx bx-show'></i>
          </button>
        </div>
        <div id="confirm-match" class="confirm-match" aria-live="polite"></div>
      </div>
    </div>

    <!-- Register button -->
    <div class="input-row">
      <button type="submit">Register</button>
    </div>

    <!-- Moved the link below -->
    <div class="links-row">
      <a href="/login" class="already-link">Already have an account?</a>
    </div>
  </form>

                  </div>
              </div>
          </section>
          <footer>
              <%- include('partials/footer') %>
          </footer>
          <script>
      const pw = document.getElementById('password');
      const cpw = document.getElementById('confirm_password');
      const strength = document.getElementById('password-strength');
      const hintsList = document.querySelector('.password-hints');
      const confirmMsg = document.getElementById('confirm-match');

      const hints = {
        length: document.getElementById('hint-length'),
        upper: document.getElementById('hint-upper'),
        lower: document.getElementById('hint-lower'),
        number: document.getElementById('hint-number'),
        special: document.getElementById('hint-special')
      };

      function assessStrength(value) {
        let score = 0;
        if (value.length >= 8) score++;
        if (/[A-Z]/.test(value)) score++;
        if (/[a-z]/.test(value)) score++;
        if (/\d/.test(value)) score++;
        if (/[!@#$%^&*()_+\-={}\[\]|;:'",.<>/?`~]/.test(value)) score++;
        return score; // 0â€“5
      }

      function updateHints(value) {
        hints.length.classList.toggle('ok', value.length >= 8);
        hints.upper.classList.toggle('ok', /[A-Z]/.test(value));
        hints.lower.classList.toggle('ok', /[a-z]/.test(value));
        hints.number.classList.toggle('ok', /\d/.test(value));
        hints.special.classList.toggle('ok', /[!@#$%^&*()_+\-={}\[\]|;:'",.<>/?`~]/.test(value));
      }

      function updateStrength(value) {
        const s = assessStrength(value);
        const labels = ['Too weak', 'Weak', 'Fair', 'Good', 'Strong', 'Very strong'];
        strength.textContent = value ? labels[s] : '';
        strength.className = 'password-strength level-' + s;

        // Show hints only if password is not yet fully strong
        if (value && s < 5) {
          hintsList.classList.remove('hidden');
        } else {
          hintsList.classList.add('hidden');
        }
      }

      function updateConfirm() {
        if (!cpw.value) {
          confirmMsg.textContent = '';
          confirmMsg.className = 'confirm-match';
          return;
        }
        const match = pw.value && cpw.value && pw.value === cpw.value;
        confirmMsg.textContent = match ? 'Passwords match' : 'Passwords do not match';
        confirmMsg.className = 'confirm-match ' + (match ? 'ok' : 'bad');
      }

      pw.addEventListener('input', () => {
        updateHints(pw.value);
        updateStrength(pw.value);
        updateConfirm();
      });
      cpw.addEventListener('input', updateConfirm);

      // toggle visibility
      document.querySelectorAll('.toggle-visibility').forEach(btn => {
        btn.addEventListener('click', () => {
          const target = document.getElementById(btn.dataset.target);
          const icon = btn.querySelector('i');
          if (target.type === 'password') {
            target.type = 'text';
            icon.classList.replace('bx-show', 'bx-hide');
            btn.setAttribute('aria-label', 'Hide password');
          } else {
            target.type = 'password';
            icon.classList.replace('bx-hide', 'bx-show');
            btn.setAttribute('aria-label', 'Show password');
          }
        });
      });

      // validation before submit
      const form = document.querySelector('form[action="/register"]');
      form.addEventListener('submit', (e) => {
        const strong = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_+\-={}\[\]|;:'",.<>/?`~]).{8,}$/.test(pw.value);
        if (!strong) {
          e.preventDefault();
          alert('Password must include uppercase, lowercase, number, and special character.');
          pw.focus();
          return;
        }
        if (pw.value !== cpw.value) {
          e.preventDefault();
          alert('Passwords do not match.');
          cpw.focus();
        }
      });
          </script> 
        </body>
        </html>