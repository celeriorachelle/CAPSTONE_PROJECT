<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Book Plots</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/stylesheets/bookplots.css">
</head>
<body>
  <!-- Sidebar -->
  <%- include('partials/sidebar') %>

  <div class="main" id="main">
    <!-- Topbar -->
    <%- include('partials/topbar', { title: "Book Plots" }) %>

    <div class="main-content">
<!-- AI Recommendations -->
<div class="section-card">
  <h2 class="section-title">Recommended Plots</h2>
  <table class="booking-table recommended-table">
    <thead>
      <tr>
        <th>Plot No.</th>
        <th>Location</th>
        <th>Type</th>
        <th>Price</th>
        <th>Status</th>
        <th>Action</th>
      </tr>
    </thead>
    <tbody>
      <% recommendations.forEach(plot => { %>
      <tr class="<%= plot.isBestMatch ? 'best-match-row' : '' %>">
        <% const avail = (plot.availability || 'available').toLowerCase(); %>
        <td data-label="Plot No."><%= plot.plot_number %></td>
        <td data-label="Location"><%= plot.location %></td>
        <td data-label="Type"><%= plot.type %></td>
        <td data-label="Price">₱<%= plot.price.toLocaleString() %></td>
        <td data-label="Status">
          <% if (avail === 'available') { %>
            <span class="badge badge-done">Available</span>
          <% } else if (avail === 'reserved') { %>
            <span class="badge badge-reserved">Reserved</span>
          <% } else { %>
            <span class="badge badge-occupied">Occupied</span>
          <% } %>
        </td>
        <td data-label="Action">
          <% if (avail === 'available') { %>
            <form action="/bookplots/option/<%= plot.plot_id %>" method="GET">
              <button type="submit" class="btn btn-book">BOOK</button>
            </form>
          <% } else { %>
            <button type="button" class="btn btn-disabled" disabled>Not Available</button>
          <% } %>
        </td>
      </tr>
      <% }) %>
    </tbody>
  </table>
</div>

<!-- All Plots -->
<div class="section-card">
  <h2 class="section-title">All Plots</h2>
  <table class="booking-table all-plots-table">
    <thead>
      <tr>
        <th>Plot No.</th>
        <th>Location</th>
        <th>Type</th>
        <th>Price</th>
        <th>Status</th>
        <th>Action</th>
      </tr>
    </thead>
    <tbody>
      <% plots.forEach(plot => { %>
      <tr>
        <% const avail = (plot.availability || 'available').toLowerCase(); %>
        <td data-label="Plot No."><%= plot.plot_number %></td>
        <td data-label="Location"><%= plot.location %></td>
        <td data-label="Type"><%= plot.type %></td>
        <td data-label="Price">₱<%= plot.price.toLocaleString() %></td>
        <td data-label="Status">
          <% if (avail === 'available') { %>
            <span class="badge badge-done">Available</span>
          <% } else if (avail === 'reserved') { %>
            <span class="badge badge-reserved">Reserved</span>
          <% } else { %>
            <span class="badge badge-occupied">Occupied</span>
          <% } %>
        </td>
        <td data-label="Action">
          <% if (avail === 'available') { %>
            <form action="/bookplots/option/<%= plot.plot_id %>" method="GET">
              <button type="submit" class="btn btn-book">BOOK</button>
            </form>
          <% } else { %>
            <button type="button" class="btn btn-disabled" disabled>Not Available</button>
          <% } %>
        </td>
      </tr>
      <% }) %>
    </tbody>
  </table>




<!-- Pagination for All Plots -->
<% if (totalPages > 1) { %>
  <div class="pagination">
    <% if (currentPage > 1) { %>
      <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
    <% } %>

    <% for (let i = 1; i <= totalPages; i++) { %>
      <% if (i === currentPage) { %>
        <span class="current-page"><%= i %></span>
      <% } else { %>
        <a href="?page=<%= i %>"><%= i %></a>
      <% } %>
    <% } %>

    <% if (currentPage < totalPages) { %>
      <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
    <% } %>
  </div>
<% } %>

  </div>
      <!-- Footer -->

  <script>
    // Client-side pagination to 10 per page
    document.addEventListener('DOMContentLoaded', function() {
      const tbody = document.getElementById('plotTableBody');
      if (!tbody) return;
      const rows = Array.from(tbody.querySelectorAll('tr'));
      const perPage = 10; // limit to 10
      const total = Math.ceil(rows.length / perPage) || 1;
      const pagEl = document.getElementById('plotPagination');
      let current = 1;

      function renderPage(page) {
        current = page;
        const start = (page - 1) * perPage;
        const end = page * perPage;
        rows.forEach((row, idx) => {
          row.style.display = (idx >= start && idx < end) ? '' : 'none';
        });
        renderControls();
      }

      function makeLink(text, disabled, handler, active) {
        const a = document.createElement('a');
        a.href = '#';
        a.textContent = text;
        if (disabled) a.classList.add('disabled');
        if (active) a.classList.add('active');
        a.addEventListener('click', (e) => {
          e.preventDefault();
          if (!disabled && handler) handler();
        });
        return a;
      }

      function renderControls() {
        if (!pagEl) return;
        pagEl.innerHTML = '';
        if (total <= 1) return;

        pagEl.appendChild(makeLink('Previous', current === 1, () => renderPage(current - 1), false));
        for (let i = 1; i <= total; i++) {
          pagEl.appendChild(makeLink(String(i), false, () => renderPage(i), i === current));
        }
        pagEl.appendChild(makeLink('Next', current === total, () => renderPage(current + 1), false));
      }

      renderPage(1);
    });
  </script>
  <script>
async function fetchAIRecommendations() {
  try {
    const response = await fetch('/bookplots/ai-recommendations');
    const data = await response.json();
    const container = document.querySelector('.recommended-table tbody');
    if (!container) return;

    container.innerHTML = ''; // clear current rows

    data.recommendations.forEach(plot => {
      const row = document.createElement('tr');
      if (plot.isBestMatch) row.classList.add('best-match-row');

      row.innerHTML = `
        <td>${plot.plot_number}</td>
        <td>${plot.location}</td>
        <td>${plot.type}</td>
        <td>₱${plot.price.toLocaleString()}</td>
        <td>
          <div class="badge-container">
            <span class="badge badge-done">Available</span>
            ${plot.isBestMatch ? '<span class="badge badge-best">Best Match</span>' : ''}
          </div>
        </td>
        <td>
          <form action="/bookplots/option/${plot.plot_id}" method="GET">
            <button type="submit" class="btn btn-book">BOOK</button>
          </form>
        </td>
      `;
      container.appendChild(row);
    });
  } catch (err) {
    console.error('Error updating AI recommendations:', err);
  }
}

// Auto-refresh every 30 seconds (or adjust interval)
setInterval(fetchAIRecommendations, 30000);

// Optional: fetch once immediately on page load
fetchAIRecommendations();
</script>
    <footer class="footer">
      <%- include('partials/footer') %>
    </footer>
</body>
</html>
