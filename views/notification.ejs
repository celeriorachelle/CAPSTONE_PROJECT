<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Notifications - Everlasting Peace Memorial Park</title>
  <link rel="stylesheet" href="/stylesheets/notification.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet" />
</head>

<body>
  <!-- âœ… Sidebar -->
  <%- include('partials/sidebar') %>

  <div class="main" id="main">
    <!-- âœ… Topbar -->
    <%- include('partials/topbar', { title: "Notifications" }) %>

    <!-- âœ… Main Content -->
    <div class="notif-container">
      <div class="btn-row">
        <a href="/userdashboard" class="btn">â¬… Back</a>
        <button id="markAllRead" class="btn"><i class="fas fa-check-double"></i> Mark All as Read</button>
      </div>

      <h1><i class="fas fa-bell"></i> Notifications</h1>

      <div id="notificationList">
        <% if (notifications.length === 0) { %>
          <p style="text-align:center; color:gray;">No notifications found.</p>
        <% } else { %>
          <% notifications.forEach(n => { %>
            <div class="notif-card <%= n.is_read ? 'read' : 'unread' %>" data-id="<%= n.id %>">
              <div class="notif-header">
                <strong>Everlasting Peace Memorial Park</strong>
                <span class="notif-time"><%= new Date(n.datestamp).toLocaleString() %></span>
              </div>
              <p class="notif-message"><%= n.message %></p>
            </div>
          <% }) %>
        <% } %>
      </div>
    </div>

    <!-- âœ… Footer -->
    <footer>
      <%- include('partials/footer') %>
    </footer>
  </div>

  <!-- âœ… JavaScript -->
    <script>
    async function fetchNotifications() {
      try {
        const res = await fetch("/notification/json");
        const notifications = await res.json();
        const container = document.getElementById("notificationList");

        if (!notifications || notifications.length === 0) {
          container.innerHTML = '<p style="text-align:center; color:gray;">No notifications found.</p>';
          return;
        }

        // Build notification HTML
        container.innerHTML = notifications.map(n => `
          <div class="notif-card ${n.is_read ? 'read' : 'unread'}" data-id="${n.id}">
            <div class="notif-header">
              <strong>Everlasting Peace Memorial Park</strong>
              <span class="notif-time">${new Date(n.datestamp).toLocaleString()}</span>
            </div>
            <p class="notif-message">${n.message}</p>
          </div>
        `).join('');
      } catch (err) {
        console.error("Error fetching notifications:", err);
      }
    }

    async function updateBadge() {
      try {
        const res = await fetch("/notification/unread/count");
        const { count } = await res.json();
        // Optional: update bell badge if exists
      } catch (err) {
        console.error("Error updating badge:", err);
      }
    }

    // ðŸ”¹ Automatically mark all as read
    document.getElementById("markAllRead").addEventListener("click", async () => {
      try {
        await fetch("/notification/mark-read", { method: "POST" });
        document.querySelectorAll(".notif-card").forEach(card => {
          card.classList.remove("unread");
          card.classList.add("read");
        });
        updateBadge();
      } catch (err) {
        console.error("Error marking all as read:", err);
      }
    });

    // ðŸ”¹ Auto-refresh notifications every 10 seconds
    setInterval(async () => {
      const oldIds = Array.from(document.querySelectorAll(".notif-card")).map(c => c.dataset.id);
      await fetchNotifications();

      // Animate newly added notifications
      const newCards = Array.from(document.querySelectorAll(".notif-card")).filter(c => !oldIds.includes(c.dataset.id));
      newCards.forEach(card => card.classList.add("unread"));
      updateBadge();
    }, 10000);
  </script>
</body>
</html>
