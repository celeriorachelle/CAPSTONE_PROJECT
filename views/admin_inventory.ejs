<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Plot Inventory | Everlasting Peace Memorial Park</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <link rel="stylesheet" href="/stylesheets/admin_inventory.css" />
</head>

<body>
  <%- include('./partials/admin/topbar', { activePage: 'inventory' }) %>

  <main class="admin-main">
    <%- include('./partials/admin/sidebar', { activePage: 'inventory' }) %>

    <section class="content">
      <div class="content-header">
        <h2><i class="fas fa-boxes"></i> Plot Inventory</h2>
        <div class="header-actions">
          <div class="search-bar">
            <i class="fas fa-search"></i>
            <input type="text" id="searchInput" placeholder="Search inventory...">
          </div>
          <button onclick="openPopup(false)" class="btn-action btn-add">
            <i class="fas fa-plus"></i> Add Plot
          </button>
        </div>
      </div>

      <div class="inventory-container">
        <div class="content-controls">
          <div class="table-header">
            <h3><i class="fas fa-list"></i> Inventory Overview</h3>
          </div>
          <div class="records-limit">
            <label for="recordsPerPage">Records per page:</label>
            <select id="recordsPerPage" class="filter-select">
              <option value="5">5</option>
              <option value="10" selected>10</option>
              <option value="25">25</option>
              <option value="50">50</option>
            </select>
          </div>
        </div>

        <div class="table-wrapper">
          <table class="inventory-table" id="inventoryTable">
            <thead>
              <tr>
                <th>Item Name</th>
                <th>Category</th>
                <th>Total Plots</th>
                <th>Available Plots</th>
                <th>Price</th>
                <th>Last Update</th>
                <th class="actions-column">Actions</th>
              </tr>
            </thead>
            <tbody>
              <% if (plots.length === 0) { %>
                <tr class="empty-state-row">
                  <td colspan="7" class="empty-state">
                    <i class="fas fa-folder-open"></i>
                    <h3>No Plots Found</h3>
                  </td>
                </tr>
              <% } else { %>
                <% plots.forEach(plot => { %>
                  <tr>
                    <td><%= plot.item_name %></td>
                    <td><%= plot.category %></td>
                    <td><%= plot.total_plots %></td>
                    <td><%= plot.available_plots %></td>
                    <td>â‚±<%= plot.default_price.toLocaleString() %></td>
                    <td><%= plot.last_update ? new Date(plot.last_update).toLocaleString() : '-' %></td>
                    <td class="actions-column">
                      <div class="action-buttons">
                        <button type="button" class="btn-action btn-edit" onclick='openPopup(true, <%- JSON.stringify(plot) %>)'>
                          <i class="fas fa-edit"></i> Edit
                        </button>
                        <form method="POST" action="/admin_inventory/delete/<%= plot.item_id %>" style="display:inline" onsubmit="return confirm('Are you sure you want to delete this plot?')">
                          <button type="submit" class="btn-action btn-delete">
                            <i class="fas fa-trash"></i> Delete
                          </button>
                        </form>
                      </div>
                    </td>
                  </tr>
                <% }); %>
              <% } %>
            </tbody>
          </table>

          <!-- Pagination Controls -->
          <div class="pagination">
            <button id="prevPage" class="btn-page" disabled>
              <i class="fas fa-chevron-left"></i> Previous
            </button>
            <div id="pageNumbers" class="page-numbers"></div>
            <button id="nextPage" class="btn-page">
              Next <i class="fas fa-chevron-right"></i>
            </button>
          </div>
        </div>
      </div>
    </section>
  </main>

  <!-- Popup -->
  <div class="popup" id="plotPopup">
    <div class="popup-content">
      <span class="close-btn" onclick="closePopup()">&times;</span>
      <h2 id="popupTitle">Add New Plot</h2>
      <form id="plotForm" method="POST" action="/admin_inventory/add">
        <input type="hidden" name="item_id" id="itemId">

        <label>Item Name</label>
        <input type="text" name="item_name" id="itemName" required>

        <label>Category</label>
        <input type="text" name="category" id="category" required>

        <label>Total Plots</label>
        <input type="number" name="total_plots" id="totalPlots" min="1" required>

        <label>Available Plots</label>
        <input type="number" name="available_plots" id="availablePlots" min="0" required>

        <label>Default Price</label>
        <input type="number" name="default_price" id="defaultPrice" min="0" required>

        <div class="popup-actions">
          <button type="submit" class="save-btn" id="popupSubmitBtn">Add Plot</button>
          <button type="button" class="cancel-btn" onclick="closePopup()">Cancel</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    let currentPage = 1;
    let filteredRows = [];

    // Popup functions
    function openPopup(edit = false, plot = null) {
      document.getElementById("plotPopup").style.display = "flex";
      document.getElementById("plotForm").reset();

      if (edit && plot) {
        document.getElementById("popupTitle").innerText = "Edit Plot";
        document.getElementById("popupSubmitBtn").innerText = "Update Plot";
        document.getElementById("plotForm").action = "/admin_inventory/edit/" + plot.item_id;
        document.getElementById("itemId").value = plot.item_id;
        document.getElementById("itemName").value = plot.item_name;
        document.getElementById("category").value = plot.category;
        document.getElementById("totalPlots").value = plot.total_plots;
        document.getElementById("availablePlots").value = plot.available_plots;
        document.getElementById("defaultPrice").value = plot.default_price;
      } else {
        document.getElementById("popupTitle").innerText = "Add New Plot";
        document.getElementById("popupSubmitBtn").innerText = "Add Plot";
        document.getElementById("plotForm").action = "/admin_inventory/add";
      }
    }

    function closePopup() {
      document.getElementById("plotPopup").style.display = "none";
      document.getElementById("plotForm").reset();
    }

    // Search and Filter
    const searchInput = document.getElementById('searchInput');
    const recordsPerPageSelect = document.getElementById('recordsPerPage');

    function filterTable() {
      const searchTerm = searchInput.value.toLowerCase();
      const allRows = Array.from(document.querySelectorAll('.inventory-table tbody tr'))
        .filter(row => !row.classList.contains('empty-state-row'));

      filteredRows = allRows.filter(row => {
        const rowText = row.textContent.toLowerCase();
        return rowText.includes(searchTerm);
      });

      currentPage = 1;
      updatePagination();
      displayCurrentPage();
    }

    function updatePagination() {
      const itemsPerPage = parseInt(recordsPerPageSelect.value);
      const totalPages = Math.ceil(filteredRows.length / itemsPerPage);
      const pageNumbers = document.getElementById('pageNumbers');
      pageNumbers.innerHTML = '';

      let startPage = Math.max(1, currentPage - 2);
      let endPage = Math.min(totalPages, startPage + 4);
      
      if (endPage - startPage < 4) {
        startPage = Math.max(1, endPage - 4);
      }

      for (let i = startPage; i <= endPage; i++) {
        const btn = document.createElement('button');
        btn.textContent = i;
        btn.classList.toggle('active', i === currentPage);
        btn.onclick = () => {
          currentPage = i;
          updatePagination();
          displayCurrentPage();
        };
        pageNumbers.appendChild(btn);
      }

      document.getElementById('prevPage').disabled = currentPage === 1;
      document.getElementById('nextPage').disabled = currentPage === totalPages || totalPages === 0;
    }

    function displayCurrentPage() {
      const itemsPerPage = parseInt(recordsPerPageSelect.value);
      const start = (currentPage - 1) * itemsPerPage;
      const end = start + itemsPerPage;
      const pageRows = filteredRows.slice(start, end);

      document.querySelectorAll('.inventory-table tbody tr').forEach(row => {
        if (!row.classList.contains('empty-state-row')) {
          row.style.display = 'none';
        }
      });

      pageRows.forEach(row => row.style.display = '');

      const emptyState = document.querySelector('.empty-state-row');
      if (emptyState) {
        emptyState.style.display = filteredRows.length === 0 ? '' : 'none';
      }
    }

    // Event Listeners
    searchInput.addEventListener('keyup', filterTable);
    recordsPerPageSelect.addEventListener('change', () => {
      currentPage = 1;
      updatePagination();
      displayCurrentPage();
    });

    document.getElementById('prevPage').addEventListener('click', () => {
      if (currentPage > 1) {
        currentPage--;
        updatePagination();
        displayCurrentPage();
      }
    });

    document.getElementById('nextPage').addEventListener('click', () => {
      const itemsPerPage = parseInt(recordsPerPageSelect.value);
      const totalPages = Math.ceil(filteredRows.length / itemsPerPage);
      if (currentPage < totalPages) {
        currentPage++;
        updatePagination();
        displayCurrentPage();
      }
    });

    // Initialize
    filterTable();
  </script>
</body>
</html>