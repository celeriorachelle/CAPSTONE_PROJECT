<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Reports Dashboard</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif;
      background: linear-gradient(135deg, #fdf5ee 0%, #f5ede4 100%);
      color: #1e293b;
      line-height: 1.6;
      padding: 0;
      min-height: 100vh;
    }

    .container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 0 20px;
    }

    /* Navbar */
    .navbar {
      background: linear-gradient(135deg, #2d4a24 0%, #1a2f16 100%);
      padding: 0;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      position: sticky;
      top: 0;
      z-index: 100;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .navbar-content {
      max-width: 1400px;
      margin: 0 auto;
      padding: 16px 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .navbar h1 {
      color: white;
      font-size: 1.25rem;
      font-weight: 700;
      letter-spacing: -0.025em;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .navbar-icon {
      font-size: 1.5rem;
    }

    .navbar a {
      text-decoration: none;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      padding: 8px 16px;
      border-radius: 8px;
      color: white;
      font-weight: 600;
      font-size: 0.875rem;
      transition: all 0.2s ease;
      border: 1px solid rgba(255, 255, 255, 0.1);
      display: flex;
      align-items: center;
      gap: 6px;
    }

    .navbar a:hover {
      background: rgba(255, 255, 255, 0.15);
      transform: translateY(-1px);
    }

    /* Header Section */
    .header-section {
      padding: 28px 0 24px;
    }

    .header-content {
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      gap: 16px;
    }

    .header-title {
      flex: 1;
    }

    .header-title h2 {
      font-size: 1.5rem;
      font-weight: 700;
      color: #0f172a;
      margin-bottom: 6px;
      letter-spacing: -0.025em;
    }

    .header-subtitle {
      color: #64748b;
      font-size: 0.875rem;
    }

    /* Export Buttons */
    .export-btns {
      display: flex;
      gap: 10px;
    }

    .export-btns button {
      padding: 9px 18px;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      font-weight: 600;
      font-size: 0.875rem;
      transition: all 0.2s ease;
      display: flex;
      align-items: center;
      gap: 6px;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

    .pdf-btn {
      background: #ef4444;
      color: white;
    }

    .excel-btn {
      background: #10b981;
      color: white;
    }

    .pdf-btn:hover {
      background: #dc2626;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3);
    }

    .excel-btn:hover {
      background: #059669;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
    }

    /* KPI Cards */
    .kpis {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
      gap: 16px;
      margin-bottom: 28px;
    }

    .kpi {
      background: white;
      padding: 20px 18px;
      border-radius: 12px;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
      border: 1px solid #e2e8f0;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .kpi::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: linear-gradient(90deg, #3b82f6, #8b5cf6);
      transform: scaleX(0);
      transition: transform 0.3s ease;
    }

    .kpi:hover {
      transform: translateY(-4px);
      box-shadow: 0 12px 24px rgba(0, 0, 0, 0.08);
      border-color: #cbd5e1;
    }

    .kpi:hover::before {
      transform: scaleX(1);
    }

    .kpi-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-bottom: 12px;
    }

    .kpi-icon {
      font-size: 1.5rem;
      opacity: 0.9;
    }

    .kpi-label {
      color: #64748b;
      font-size: 0.75rem;
      font-weight: 500;
      text-transform: uppercase;
      letter-spacing: 0.05em;
    }

    .kpi-value {
      font-size: 1.75rem;
      font-weight: 700;
      color: #0f172a;
      line-height: 1;
      margin-bottom: 6px;
      letter-spacing: -0.025em;
    }

    .kpi-description {
      color: #64748b;
      font-size: 0.8125rem;
      font-weight: 500;
    }

    /* Charts Section */
    .charts {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(480px, 1fr));
      gap: 20px;
      margin-bottom: 28px;
    }

    .chart-container {
      background: white;
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
      border: 1px solid #e2e8f0;
      transition: all 0.3s ease;
    }

    .chart-container:hover {
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.08);
    }

    .chart-title {
      font-size: 1rem;
      font-weight: 600;
      color: #0f172a;
      margin-bottom: 16px;
      letter-spacing: -0.025em;
    }

    /* Table Section */
    .table-section {
      background: white;
      border-radius: 12px;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
      border: 1px solid #e2e8f0;
      overflow: hidden;
      margin-bottom: 28px;
    }

    .table-header {
      padding: 18px 20px;
      border-bottom: 1px solid #e2e8f0;
    }

    .table-header h3 {
      font-size: 1.125rem;
      font-weight: 600;
      color: #0f172a;
      display: flex;
      align-items: center;
      gap: 8px;
      letter-spacing: -0.025em;
    }

    table {
      width: 100%;
      border-collapse: collapse;
    }

    th, td {
      padding: 14px 20px;
      text-align: left;
      font-size: 0.875rem;
    }

    th {
      background: #f8fafc;
      color: #475569;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.05em;
      font-size: 0.75rem;
      border-bottom: 1px solid #e2e8f0;
    }

    td {
      color: #1e293b;
      border-bottom: 1px solid #f1f5f9;
    }

    tr:last-child td {
      border-bottom: none;
    }

    tbody tr {
      transition: background-color 0.15s ease;
    }

    tbody tr:hover {
      background: #f8fafc;
    }

    .amount {
      font-weight: 600;
      color: #10b981;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .charts {
        grid-template-columns: 1fr;
      }

      .kpis {
        grid-template-columns: 1fr;
      }

      .header-content {
        flex-direction: column;
        align-items: flex-start;
      }

      .export-btns {
        width: 100%;
      }

      .export-btns button {
        flex: 1;
      }

      th, td {
        padding: 12px 16px;
      }
    }

    /* Loading Animation */
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .kpi, .chart-container, .table-section {
      animation: fadeIn 0.5s ease forwards;
    }

    .kpi:nth-child(1) { animation-delay: 0.05s; }
    .kpi:nth-child(2) { animation-delay: 0.1s; }
    .kpi:nth-child(3) { animation-delay: 0.15s; }
    .kpi:nth-child(4) { animation-delay: 0.2s; }
    .kpi:nth-child(5) { animation-delay: 0.25s; }
  </style>
</head>
<body>
  <!-- Navbar -->
  <div class="navbar">
    <div class="navbar-content">
      <h1><span class="navbar-icon">üìä</span> Admin Reports</h1>
      <a href="/admin"><span>üè†</span> Dashboard</a>
    </div>
  </div>

  <div class="container">
    <!-- Header Section -->
    <div class="header-section">
      <div class="header-content">
        <div class="header-title">
          <h2>Analytics Overview</h2>
          <p class="header-subtitle">Comprehensive insights and performance metrics</p>
        </div>
        <div class="export-btns">
          <button class="pdf-btn" onclick="exportPDF()">
            <span>üìÑ</span> Export PDF
          </button>
          <button class="excel-btn" onclick="exportExcel()">
            <span>üìä</span> Export Excel
          </button>
        </div>
      </div>
    </div>

    <!-- KPI Cards -->
    <div class="kpis">
      <div class="kpi">
        <div class="kpi-header">
          <span class="kpi-icon">üìÖ</span>
        </div>
        <div class="kpi-value"><%= totalBookingsThisMonth || 0 %></div>
        <div class="kpi-description">Total Bookings This Month</div>
      </div>

      <div class="kpi">
        <div class="kpi-header">
          <span class="kpi-icon">üí∞</span>
        </div>
        <div class="kpi-value">‚Ç±<%= (totalPaymentsThisMonth ? Number(totalPaymentsThisMonth).toFixed(2) : "0.00") %></div>
        <div class="kpi-description">Total Payments This Month</div>
      </div>

      <div class="kpi">
        <div class="kpi-header">
          <span class="kpi-icon">‚è≥</span>
        </div>
        <div class="kpi-value"><%= outstandingBalances || 0 %></div>
        <div class="kpi-description">Pending Installments</div>
      </div>

      <div class="kpi">
        <div class="kpi-header">
          <span class="kpi-icon">üìà</span>
        </div>
        <div class="kpi-value">‚Ç±<%= (avgPayment ? Number(avgPayment).toFixed(2) : "0.00") %></div>
        <div class="kpi-description">Average Payment</div>
      </div>

      <div class="kpi">
        <div class="kpi-header">
          <span class="kpi-icon">‚≠ê</span>
        </div>
        <div class="kpi-value" style="font-size: 1.25rem;"><%= mostPopularPlot || "N/A" %></div>
        <div class="kpi-description">Most Popular Plot Type</div>
      </div>
    </div>

    <!-- Charts -->
    <div id="reportContent">
      <div class="charts">
        <div class="chart-container">
          <div class="chart-title">Bookings Per Month</div>
          <canvas id="bookingsPerMonth"></canvas>
        </div>

        <div class="chart-container">
          <div class="chart-title">Payments Per Month</div>
          <canvas id="paymentsPerMonth"></canvas>
        </div>

        <div class="chart-container">
          <div class="chart-title">Bookings by Status</div>
          <canvas id="bookingsByStatus"></canvas>
        </div>

        <% if (serviceVsPlot && serviceVsPlot.length) { %>
        <div class="chart-container">
          <div class="chart-title">Service vs Plot Type</div>
          <canvas id="serviceVsPlot"></canvas>
        </div>
        <% } %>

        <% if (popularPlots && popularPlots.length) { %>
        <div class="chart-container">
          <div class="chart-title">Popular Plot Types</div>
          <canvas id="popularPlots"></canvas>
        </div>
        <% } %>

        <% if (bookings.length && payments.length) { %>
        <div class="chart-container">
          <div class="chart-title">Revenue vs Bookings Trend</div>
          <canvas id="revenueVsBookings"></canvas>
        </div>
        <% } %>
      </div>

      <!-- Top Clients Table -->
      <div class="table-section">
        <div class="table-header">
          <h3>üèÜ Top Paying Clients</h3>
        </div>
        <table id="clientsTable">
          <thead>
            <tr>
              <th>Client Name</th>
              <th style="text-align: right;">Total Paid</th>
            </tr>
          </thead>
          <tbody>
            <% if (topClients && topClients.length) { %>
              <% topClients.forEach(c => { %>
                <tr>
                  <td><%= c.client_name %></td>
                  <td style="text-align: right;" class="amount">‚Ç±<%= Number(c.total).toFixed(2) %></td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr>
                <td colspan="2" style="text-align: center; color: #94a3b8;">No data available</td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <script>
    const bookings = <%- JSON.stringify(bookings || []) %>;
    const payments = <%- JSON.stringify(payments || []) %>;
    const statusCounts = <%- JSON.stringify(statusCounts || []) %>;
    const serviceVsPlot = <%- JSON.stringify(serviceVsPlot || []) %>;
    const popularPlots = <%- JSON.stringify(popularPlots || []) %>;

    // Chart.js default configuration
    Chart.defaults.font.family = "'Inter', sans-serif";
    Chart.defaults.color = '#64748b';
    Chart.defaults.plugins.legend.labels.usePointStyle = true;
    Chart.defaults.plugins.legend.labels.padding = 15;

    // Bookings Per Month Chart
    if (bookings.length) {
      new Chart(document.getElementById("bookingsPerMonth"), {
        type: "line",
        data: {
          labels: bookings.map(b => b.month),
          datasets: [{
            label: "Bookings",
            data: bookings.map(b => b.total),
            borderColor: "#3b82f6",
            backgroundColor: "rgba(59, 130, 246, 0.1)",
            fill: true,
            tension: 0.4,
            borderWidth: 3,
            pointRadius: 5,
            pointHoverRadius: 7,
            pointBackgroundColor: "#3b82f6",
            pointBorderColor: "#fff",
            pointBorderWidth: 2
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: true,
          plugins: {
            legend: { display: false }
          },
          scales: {
            y: {
              beginAtZero: true,
              grid: { color: "#f1f5f9" },
              ticks: { padding: 10 }
            },
            x: {
              grid: { display: false },
              ticks: { padding: 10 }
            }
          }
        }
      });
    }

    // Payments Per Month Chart
    if (payments.length) {
      new Chart(document.getElementById("paymentsPerMonth"), {
        type: "bar",
        data: {
          labels: payments.map(p => p.month),
          datasets: [{
            label: "Payments (‚Ç±)",
            data: payments.map(p => p.total),
            backgroundColor: "#10b981",
            borderRadius: 8,
            borderSkipped: false
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: true,
          plugins: {
            legend: { display: false }
          },
          scales: {
            y: {
              beginAtZero: true,
              grid: { color: "#f1f5f9" },
              ticks: { padding: 10 }
            },
            x: {
              grid: { display: false },
              ticks: { padding: 10 }
            }
          }
        }
      });
    }

    // Bookings by Status Chart
    if (statusCounts.length) {
      new Chart(document.getElementById("bookingsByStatus"), {
        type: "doughnut",
        data: {
          labels: statusCounts.map(s => s.status),
          datasets: [{
            data: statusCounts.map(s => s.total),
            backgroundColor: ["#10b981", "#f59e0b", "#ef4444", "#6366f1"],
            borderWidth: 0,
            hoverOffset: 10
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: true,
          plugins: {
            legend: {
              position: "bottom",
              labels: { padding: 20 }
            }
          }
        }
      });
    }

    // Service vs Plot Chart
    if (serviceVsPlot.length) {
      new Chart(document.getElementById("serviceVsPlot"), {
        type: "bar",
        data: {
          labels: serviceVsPlot.map(s => s.type),
          datasets: [{
            label: "Bookings",
            data: serviceVsPlot.map(s => s.total),
            backgroundColor: "#8b5cf6",
            borderRadius: 8,
            borderSkipped: false
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: true,
          plugins: {
            legend: { display: false }
          },
          scales: {
            y: {
              beginAtZero: true,
              grid: { color: "#f1f5f9" },
              ticks: { padding: 10 }
            },
            x: {
              grid: { display: false },
              ticks: { padding: 10 }
            }
          }
        }
      });
    }

    // Popular Plots Chart
    if (popularPlots.length) {
      new Chart(document.getElementById("popularPlots"), {
        type: "bar",
        data: {
          labels: popularPlots.map(p => p.plot_type),
          datasets: [{
            label: "Bookings",
            data: popularPlots.map(p => p.total),
            backgroundColor: "#ec4899",
            borderRadius: 8,
            borderSkipped: false
          }]
        },
        options: {
          indexAxis: "y",
          responsive: true,
          maintainAspectRatio: true,
          plugins: {
            legend: { display: false }
          },
          scales: {
            x: {
              beginAtZero: true,
              grid: { color: "#f1f5f9" },
              ticks: { padding: 10 }
            },
            y: {
              grid: { display: false },
              ticks: { padding: 10 }
            }
          }
        }
      });
    }

    // Revenue vs Bookings Chart
    if (bookings.length && payments.length) {
      new Chart(document.getElementById("revenueVsBookings"), {
        type: "line",
        data: {
          labels: bookings.map(b => b.month),
          datasets: [
            {
              label: "Bookings",
              data: bookings.map(b => b.total),
              borderColor: "#3b82f6",
              backgroundColor: "rgba(59, 130, 246, 0.1)",
              fill: true,
              tension: 0.4,
              borderWidth: 3,
              pointRadius: 5,
              pointHoverRadius: 7,
              pointBackgroundColor: "#3b82f6",
              pointBorderColor: "#fff",
              pointBorderWidth: 2,
              yAxisID: "y"
            },
            {
              label: "Payments (‚Ç±)",
              data: payments.map(p => p.total),
              borderColor: "#10b981",
              backgroundColor: "rgba(16, 185, 129, 0.1)",
              fill: true,
              tension: 0.4,
              borderWidth: 3,
              pointRadius: 5,
              pointHoverRadius: 7,
              pointBackgroundColor: "#10b981",
              pointBorderColor: "#fff",
              pointBorderWidth: 2,
              yAxisID: "y1"
            }
          ]
        },
        options: {
          responsive: true,
          maintainAspectRatio: true,
          interaction: {
            mode: "index",
            intersect: false
          },
          plugins: {
            legend: {
              position: "bottom",
              labels: { padding: 20 }
            }
          },
          scales: {
            y: {
              type: "linear",
              display: true,
              position: "left",
              beginAtZero: true,
              grid: { color: "#f1f5f9" },
              ticks: { padding: 10 }
            },
            y1: {
              type: "linear",
              display: true,
              position: "right",
              beginAtZero: true,
              grid: { drawOnChartArea: false },
              ticks: { padding: 10 }
            },
            x: {
              grid: { display: false },
              ticks: { padding: 10 }
            }
          }
        }
      });
    }

    // Export Functions
    async function exportPDF() {
      const { jsPDF } = window.jspdf;
      const doc = new jsPDF("p", "mm", "a4");

      doc.setFontSize(18);
      doc.setFont(undefined, "bold");
      doc.text("Admin Reports", 14, 20);

      const reportContent = document.getElementById("reportContent");

      await html2canvas(reportContent, { scale: 2, backgroundColor: "#ffffff" }).then(canvas => {
        const imgData = canvas.toDataURL("image/png");
        const imgProps = doc.getImageProperties(imgData);
        const pdfWidth = doc.internal.pageSize.getWidth() - 28;
        const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;
        doc.addImage(imgData, "PNG", 14, 30, pdfWidth, pdfHeight);
      });

      doc.save("AdminReports.pdf");
    }

    function exportExcel() {
      const wb = XLSX.utils.book_new();

      // Top Clients
      const table = document.getElementById("clientsTable");
      const ws1 = XLSX.utils.table_to_sheet(table);
      XLSX.utils.book_append_sheet(wb, ws1, "Top Clients");

      // Bookings
      if (bookings.length) {
        const ws2 = XLSX.utils.json_to_sheet(bookings);
        XLSX.utils.book_append_sheet(wb, ws2, "Bookings");
      }

      // Payments
      if (payments.length) {
        const ws3 = XLSX.utils.json_to_sheet(payments);
        XLSX.utils.book_append_sheet(wb, ws3, "Payments");
      }

      XLSX.writeFile(wb, "AdminReports.xlsx");
    }
  </script>
</body>
</html>