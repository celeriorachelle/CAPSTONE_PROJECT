<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Admin Dashboard | Everlasting Peace Memorial Park</title>
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <link rel="stylesheet" href="/stylesheets/admin.css" />
  <style>
    /* =====================================
       Layout Adjustments
    ====================================== */
    body {
      padding-top: 0; /* Remove any top padding */
    }

    .admin-main {
      margin-left: 270px; /* Match sidebar width */
      min-height: calc(100vh - 60px); /* Adjust for header height */
      transition: margin-left 0.3s ease;
    }

    .admin-main.collapsed {
      margin-left: 0;
    }

    .content {
      padding: 2rem;
      width: 100%;
    }

    @media (max-width: 992px) {
      .admin-main {
        margin-left: 0;
      }
    }

    /* =====================================
       Notification Dropdown (Refined Style)
    ====================================== */
    .notification-dropdown {
      position: absolute;
      top: 55px;
      right: 0;
      background: #ffffff;
      border-radius: 12px;
      width: 330px;
      box-shadow: 0 6px 18px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      display: none;
      animation: fadeIn 0.25s ease-in-out;
      z-index: 1000;
      font-family: 'Poppins', sans-serif;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .notification-dropdown header {
      background: linear-gradient(135deg, #8aac7c, #6d9360);
      color: #fff;
      padding: 12px 15px;
      font-weight: 600;
      font-size: 1rem;
      letter-spacing: 0.5px;
    }

    .notification-dropdown ul {
      list-style: none;
      margin: 0;
      padding: 0;
      max-height: 350px;
      overflow-y: auto;
    }

    .notification-dropdown ul::-webkit-scrollbar {
      width: 6px;
    }

    .notification-dropdown ul::-webkit-scrollbar-thumb {
      background: #cfcfcf;
      border-radius: 3px;
    }

    .notification-dropdown li {
      padding: 12px 15px;
      border-bottom: 1px solid #f1f1f1;
      transition: all 0.2s ease;
      cursor: pointer;
    }

    .notification-dropdown li:hover {
      background: #f7fdf5;
    }

    .notification-dropdown li.unread {
      background: #f0f7ec;
      font-weight: 600;
    }

    .notification-dropdown li small {
      display: block;
      color: #555;
      font-size: 0.8rem;
      margin-top: 3px;
    }

    /* notification-badge moved into the button; styling is centralized in admin.css */

  /* Side Toast Notification (Polished) */
    .side-toast {
      position: fixed;
      top: 90px;
      right: -350px;
      background: #2d4a24;
      color: white;
      padding: 15px 20px;
      border-radius: 10px;
      box-shadow: 0 6px 18px rgba(0,0,0,0.2);
      font-weight: 500;
      z-index: 2000;
      display: flex;
      align-items: center;
      gap: 10px;
      transition: right 0.5s ease, opacity 0.5s ease;
      opacity: 0;
    }

    .side-toast.show {
      right: 20px;
      opacity: 1;
    }

    /* Remove icon padding leftover */
    .icons {
      position: relative;
    }

    .notification-btn {
      background: linear-gradient(135deg, #8aac7c, #6d9360);
      border: none;
      border-radius: 50%;
      width: 38px;
      height: 38px;
      color: #fff;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .notification-btn:hover {
      background: linear-gradient(135deg, #6d9360, #8aac7c);
      transform: translateY(-2px);
    }
  </style>
</head>
<body>
  <!-- Include Admin Topbar -->
  <%- include('partials/admin/topbar', { activePage: 'dashboard' }) %>
  <div style="height: 100px;"></div> <!-- Spacer for fixed header -->
  <main class="admin-main">
    <!-- Include Admin Sidebar -->
    <%- include('partials/admin/sidebar', { activePage: 'dashboard' }) %>

    <section class="content">
      <header class="topbar">
        <div class="topbar-left">
          <h2>Dashboard Overview</h2>
          <div class="date-time" id="currentDateTime"></div>
        </div>
      </header>

      <section class="dashboard-welcome">
        <div class="welcome-content">
          <h1>Welcome back, <%= user ? user.firstName : "Admin" %></h1>
          <p>Here's what's happening at Everlasting Peace Memorial Park today</p>
        </div>
      </section>

      <section class="stats-grid">
        <div class="stat-card">
          <div class="stat-number"><%= todayAppointments %></div>
          <div class="stat-label">Today's Services</div>
        </div>
        <div class="stat-card">
          <div class="stat-number"><%= pendingRequests %></div>
          <div class="stat-label">Pending Requests</div>
        </div>
        <div class="stat-card">
          <div class="stat-number"><%= availablePlots %></div>
          <div class="stat-label">Available Plots</div>
        </div>
        <div class="stat-card">
          <div class="stat-number"><%= registeredFamilies %></div>
          <div class="stat-label">Registered Families</div>
        </div>
      </section>

      <section class="quick-actions">
        <h3></i> Quick Actions</h3>
        <div class="actions-grid">
          <div class="action-btn" onclick="window.location.href='/admincreateb'">
            <i class="fas fa-calendar-plus"></i>
            <span>New Booking</span>
          </div>
          <div class="action-btn" onclick="window.location.href='/burialrecord'">
            <i class="fas fa-search"></i>
            <span>Search Records</span>
          </div>
          <div class="action-btn" onclick="window.location.href='/maps'">
            <i class="fas fa-map"></i>
            <span>Cemetery Map</span>
          </div>
          <div class="action-btn" onclick="window.location.href='/reports'">
            <i class="fas fa-chart-bar"></i>
            <span>Generate Report</span>
          </div>
        </div>
      </section>
    </section>
  </main>

<script>
  // ================================
  // DATE & TIME DISPLAY
  // ================================
  function updateDateTime() {
    const now = new Date();
    document.getElementById("currentDateTime").textContent = now.toLocaleString();
  }
  updateDateTime();
  setInterval(updateDateTime, 60000);

  let lastUnreadCount = 0;

  // ================================
  // SIDE TOAST
  // ================================
  function showSideToast(message) {
    const toast = document.getElementById('sideToast');
    if (!toast) return;
    toast.querySelector('span').textContent = message;
    toast.classList.add('show');
    setTimeout(() => toast.classList.remove('show'), 4000);
  }

  // ================================
  // FETCH NOTIFICATION COUNT (from DB)
  // ================================
  // Create notification dropdown container if not present
  let notifDropdown = document.getElementById('notificationDropdown');
  if (!notifDropdown) {
    notifDropdown = document.createElement('div');
    notifDropdown.id = 'notificationDropdown';
    notifDropdown.className = 'notification-dropdown';
    document.body.appendChild(notifDropdown);
  }

  // Create side toast container used by showSideToast
  if (!document.getElementById('sideToast')) {
    const st = document.createElement('div');
    st.id = 'sideToast';
    st.className = 'side-toast';
    st.innerHTML = '<i class="fa fa-bell"></i><span></span>';
    document.body.appendChild(st);
  }

  // Helper to render notification items
  function renderNotificationList(items) {
    if (!notifDropdown) return;
    if (!items || items.length === 0) {
      notifDropdown.innerHTML = '<header>No notifications</header><ul><li style="padding:12px;">You have no recent notifications.</li></ul>';
      return;
    }
    const header = `<header>Notifications <small style="float:right;font-weight:600;color:#fff;">${items.length}</small></header>`;
    const list = items.map(it => {
      const unreadClass = it.is_read ? '' : 'unread';
      const when = it.created_at ? new Date(it.created_at).toLocaleString() : '';
      const title = it.type === 'booking' ? `${it.full_name} — ${it.service_type || ''}` : (it.type === 'downpayment' ? `${it.full_name} — Payment ₱${it.amount}` : `${it.full_name} — Payment`);
      const detail = it.type === 'booking' ? `Status: ${it.status || ''}` : `Amount: ₱${it.amount || 0}`;
      return `<li class="${unreadClass}" data-id="${it.id || ''}">
                <div style="display:flex;justify-content:space-between;align-items:center;">
                  <div style="flex:1">
                    <strong>${title}</strong>
                    <small style="display:block;color:#666;margin-top:4px;">${detail}</small>
                    <small style="display:block;color:#999;margin-top:6px;font-size:0.8rem;">${when}</small>
                  </div>
                  <div style="margin-left:8px">
                    <button class="mark-read-btn" style="background:#6d9360;color:#fff;border:none;padding:6px 8px;border-radius:6px;">Mark</button>
                  </div>
                </div>
              </li>`;
    }).join('');
    notifDropdown.innerHTML = header + '<ul>' + list + '</ul>';

    // Attach handlers for mark buttons and click-to-open behaviour
    notifDropdown.querySelectorAll('.mark-read-btn').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        e.stopPropagation();
        const li = e.target.closest('li');
        const id = li?.dataset?.id;
        if (!id) return;
        try {
          const resp = await fetch(`/admin/notification/mark-read/${id}`, { method: 'POST', credentials: 'include' });
          if (resp.ok) {
            li.classList.remove('unread');
            showSideToast('Notification marked read');
            // refresh count
            fetchNotificationCount();
          } else {
            showSideToast('Failed to mark notification');
          }
        } catch (err) {
          showSideToast('Error marking notification');
        }
      });
    });
  }

  // Toggle dropdown open/close when notification button clicked
  function ensureNotifButton() {
    // Try to find an existing notification button in topbar includes
    let btn = document.querySelector('.notification-btn') || document.getElementById('notifBtn');
    if (!btn) {
      // fallback: create a small button in the header
      const topbar = document.querySelector('.topbar') || document.querySelector('header.topbar') || document.body;
      btn = document.createElement('button');
      btn.className = 'notification-btn';
      btn.title = 'Notifications';
      btn.style.position = 'absolute';
      btn.style.right = '20px';
      btn.style.top = '18px';
      btn.innerHTML = '<i class="fa fa-bell"></i>';
      topbar.appendChild(btn);
    }

    // Attach click handler
    btn.addEventListener('click', async (e) => {
      e.stopPropagation();
      if (notifDropdown.style.display === 'block') {
        notifDropdown.style.display = 'none';
        return;
      }
      // Position dropdown under the button
      const rect = btn.getBoundingClientRect();
      notifDropdown.style.top = (rect.bottom + 8) + 'px';
      notifDropdown.style.right = (window.innerWidth - rect.right) + 'px';
      notifDropdown.style.display = 'block';
      // fetch list
      await fetchNotificationList();
    });

    // close when clicking outside
    document.addEventListener('click', (ev) => {
      if (!notifDropdown.contains(ev.target) && !btn.contains(ev.target)) {
        notifDropdown.style.display = 'none';
      }
    });

    return btn;
  }

  async function fetchNotificationCount() {
    try {
      const resp = await fetch('/admin/notification/count', { credentials: 'include' });
      if (!resp.ok) return;
      const data = await resp.json();
      const count = data.count || 0;
      // update badge on button if present
      let btn = document.querySelector('.notification-btn') || document.getElementById('notifBtn');
      if (!btn) btn = ensureNotifButton();
      // remove existing badge
      let badge = btn.querySelector('.notif-badge');
      if (!badge) {
        badge = document.createElement('span');
        badge.className = 'notif-badge';
        badge.style.position = 'absolute';
        badge.style.top = '-6px';
        badge.style.right = '-6px';
        badge.style.background = '#e74c3c';
        badge.style.color = '#fff';
        badge.style.borderRadius = '50%';
        badge.style.padding = '3px 6px';
        badge.style.fontSize = '11px';
        btn.style.position = btn.style.position || 'relative';
        btn.appendChild(badge);
      }
      badge.textContent = count > 99 ? '99+' : count;
      badge.style.display = count > 0 ? 'inline-block' : 'none';
    } catch (err) {
      // ignore
    }
  }

  async function fetchNotificationList() {
    try {
      const resp = await fetch('/admin/notification/list', { credentials: 'include' });
      if (!resp.ok) {
        notifDropdown.innerHTML = '<div style="padding:12px;color:red;">Failed to load notifications</div>';
        return;
      }
      const items = await resp.json();
      renderNotificationList(items);
    } catch (err) {
      notifDropdown.innerHTML = '<div style="padding:12px;color:red;">Error loading notifications</div>';
    }
  }

  // ================================
  // FETCH NOTIFICATION LIST
  // ================================

  // ================================
  // MARK AS READ & OPEN PAGES
  // ================================



  // ================================
  // INIT LOAD + AUTO REFRESH
  // ================================
  
  // ================================
  // DROPDOWN & SIDEBAR TOGGLE
  // ================================
  


</script>

</body>
</html>

